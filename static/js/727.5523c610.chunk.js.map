{"version":3,"file":"static/js/727.5523c610.chunk.js","mappings":"oMAGaA,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GACjCC,GAAWC,EAAAA,EAAAA,MACjB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMJ,GAA1C,gBACGH,QADH,IACGA,EAAAA,EAASC,KAFLC,EAMZ,ECXD,EAA8B,+BCGjBM,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC1B,OACE,eAAIC,UAAWC,EAAf,SACGF,EAAOG,KAAI,YAA0B,IAAvBZ,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GAC1B,OACE,SAACH,EAAD,CAEEC,MAAOA,EACPC,KAAMA,EACNC,GAAIA,GAHCA,EAMV,KAGN,C,mHClBD,EAA6B,gCAA7B,EAA6E,mCAA7E,EAAqI,wCAArI,EAA+L,qC,SCKlLW,EAAc,WAAO,IAAD,EAC/B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOL,EAAP,KAAeM,EAAf,KACA,GAAsCD,EAAAA,EAAAA,UAAS,IAA/C,eAAOE,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAE/CC,EAAAA,EAAAA,YAAU,WACHF,IAELJ,EAAeI,IACfG,EAAAA,EAAAA,IAAkBH,GAAWI,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACnCX,EAAUW,EACX,IACF,GAAE,CAACL,IAOJ,OACE,iCACE,kBAAMX,UAAWC,EAAgBgB,SAPhB,SAAAC,GACnBA,EAAEC,iBACFT,EAAgB,CAAEU,MAAOd,GAC1B,EAIG,WACE,kBACEN,UAAWC,EACXV,KAAK,OACL8B,YAAY,eACZC,KAAK,OACLC,MAAOjB,EACPkB,SAAU,SAAAN,GAAC,OAAIX,EAAeW,EAAEO,OAAOF,MAA5B,KAEb,mBAAQvB,UAAWC,EAAmBqB,KAAK,SAA3C,UACE,iBAAMtB,UAAWC,EAAjB,0BAGJ,SAACH,EAAA,EAAD,CAAWC,OAAQA,MAGxB,ECvCD,EAHe,WACb,OAAO,SAACI,EAAD,GACR,C,sLCAKuB,E,OAAYC,EAAAA,OAAa,CAC7BC,QAAS,gCACTC,OAAQ,CACNC,QALY,sCASHC,EAAiB,mCAAG,sGACRL,EAAUd,IAAI,oBAAqB,CACxDiB,OAAQ,CACNG,KAAM,KAHqB,uBACvBC,EADuB,EACvBA,KADuB,kBAMxBA,GANwB,2CAAH,qDASjBnB,EAAiB,mCAAG,WAAOM,GAAP,yFACRM,EAAUd,IAAI,gBAAiB,CACpDiB,OAAQ,CACNT,MAAAA,KAH2B,uBACvBa,EADuB,EACvBA,KADuB,kBAMxBA,GANwB,2CAAH,sDASjBC,EAAY,mCAAG,WAAO1C,GAAP,yFACHkC,EAAUd,IAAV,iBAAwBpB,IADrB,uBAClByC,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZE,EAAe,mCAAG,WAAO3C,GAAP,yFACNkC,EAAUd,IAAV,iBAAwBpB,EAAxB,aADM,uBACrByC,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfG,EAAY,mCAAG,WAAO5C,GAAP,yFACHkC,EAAUd,IAAV,iBAAwBpB,EAAxB,aADG,uBAClByC,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,qD","sources":["components/MovieItem/MovieItem.jsx","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/SearchMovie/SearchMovie.module.css?c852","components/SearchMovie/SearchMovie.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const MovieItem = ({ title, name, id }) => {\n  const location = useLocation();\n  return (\n    <li key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        {title ?? name}\n      </Link>\n    </li>\n  );\n};\n\nMovieItem.propTypes = {\n  posterPath: PropTypes.string,\n  title: PropTypes.string,\n  name: PropTypes.string,\n  id: PropTypes.number,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movie__list\":\"MovieList_movie__list__IZ1Q7\"};","import PropTypes from 'prop-types';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\nimport css from './MovieList.module.css';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <ul className={css.movie__list}>\n      {movies.map(({ title, name, id }) => {\n        return (\n          <MovieItem\n            key={id}\n            title={title}\n            name={name}\n            id={id}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchMovie_searchForm__unPlp\",\"searchFormBtn\":\"SearchMovie_searchFormBtn__Tv9Fa\",\"searchFormBtnLabel\":\"SearchMovie_searchFormBtnLabel__MRHNf\",\"searchFormInput\":\"SearchMovie_searchFormInput__QVP8q\"};","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchedMovies } from 'services/api';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport css from './SearchMovie.module.css';\n\nexport const SearchMovie = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!movieName) return;\n\n    setSearchQuery(movieName);\n    getSearchedMovies(movieName).then(({ results }) => {\n      setMovies(results);\n    });\n  }, [movieName]);\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: searchQuery });\n  };\n\n  return (\n    <>\n      <form className={css.searchForm} onSubmit={onFormSubmit}>\n        <input\n          className={css.searchFormInput}\n          name='name'\n          placeholder='Search movie'\n          type='text'\n          value={searchQuery}\n          onChange={e => setSearchQuery(e.target.value)}\n        />\n        <button className={css.searchFormBtn} type='submit'>\n          <span className={css.searchFormBtnLabel}>Search</span>\n        </button>\n      </form>\n      <MovieList movies={movies} />\n    </>\n  );\n};\n","import { SearchMovie } from 'components/SearchMovie/SearchMovie';\n\nconst Movies = () => {\n  return <SearchMovie />;\n};\nexport default Movies;\n","import axios from \"axios\";\r\n\r\nconst API_KEY = '4d1fe51ed84bccfd5906e94a2d193282';\r\n\r\nconst moviesApi = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3/',\r\n  params: {\r\n    api_key: API_KEY\r\n  },\r\n});\r\n\r\nexport const getTrendingMovies = async () => {\r\n  const { data } = await moviesApi.get('/trending/all/day', {\r\n    params: {\r\n      page: 1\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getSearchedMovies = async (query) => {\r\n  const { data } = await moviesApi.get('/search/movie', {\r\n    params: {\r\n      query,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getMovieById = async (id) => {\r\n  const { data } = await moviesApi.get(`/movie/${id}`);\r\n  return data;\r\n};\r\n\r\nexport const getMovieReviews = async (id) => {\r\n  const { data } = await moviesApi.get(`/movie/${id}/reviews`);\r\n  return data;\r\n};\r\n\r\nexport const getMovieCast = async (id) => {\r\n  const { data } = await moviesApi.get(`/movie/${id}/credits`);\r\n  return data;\r\n};\r\n\r\n// export function fetchGenresList() {\r\n//   return moviesApi.get('genre/movie/list?language=en-US');\r\n// }"],"names":["MovieItem","title","name","id","location","useLocation","to","state","from","MovieList","movies","className","css","map","SearchMovie","useState","setMovies","searchQuery","setSearchQuery","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","getSearchedMovies","then","results","onSubmit","e","preventDefault","query","placeholder","type","value","onChange","target","moviesApi","axios","baseURL","params","api_key","getTrendingMovies","page","data","getMovieById","getMovieReviews","getMovieCast"],"sourceRoot":""}